import { Injectable } from '@nestjs/common';

import { Context } from 'telegraf';

@Injectable()
export class ProfileValidator {
  constructor() {}

  static isPhoto(ctx: Context): ctx is Context & { message: { photo: any[] } } {
    return (
      !!ctx.message &&
      'photo' in ctx.message &&
      Array.isArray(ctx.message.photo)
    );
  }

  static getUserPhoto(photo: any): string | null {
    if (!Array.isArray(photo) || photo.length === 0) return null;

    const bestPhoto = photo[photo.length - 1];
    return bestPhoto?.file_id ?? null;
  }

  static isGeoLocation(ctx: Context): ctx is Context & {
    message: { location: { latitude: number; longitude: number } };
  } {
    return !!ctx.message && 'location' in ctx.message;
  }

  static validationName(name: string): true | string {
    if (name.length < 2) return "‚ùå –Ü–º'—è –∑–∞–∫–æ—Ä–æ—Ç–∫–µ —è–∫ –Ω–∞ –º–µ–Ω–µ)";
    if (name.length > 25) return "‚ùå –Ü–º'—è –≤–µ–ª–∏–∫–µ —è–∫ –Ω–∞ –º–µ–Ω–µ)";

    if (/\s/.test(name)) return "‚ùå –í–∫–∞–∂–∏ —ñ–º'—è –±–µ–∑ –ø—Ä–æ–±—ñ–ª—ñ–≤!";
    if (/\d/.test(name)) return '‚ùå –í —ñ–º–µ–Ω—ñ –Ω–µ –º–æ–∂—É—Ç—å –±—É—Ç–∏ —Ü–∏—Ñ—Ä–∏)))';

    return true;
  }

  static validationAge(age: string): true | string {
    const testAge = parseInt(age);

    if (!testAge && testAge !== 0)
      return '‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥–∏ –≤—ñ–∫ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∞–º–∏, –±–µ–∑ —Ç–µ–∫—Å—Ç—É üòÖ';
    if (testAge <= 0) return 'ü§® –©–æ—Å—å –Ω–µ —Ç–µ –∑ –≤—ñ–∫–æ–º... –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑';
    if (testAge < 10) 'üòÖ –¢–æ–±–æ —Å—é–¥–∏. –ë—ñ–∂–∏ –Ω–∞ —É—Ä–æ–∫–∏ üë∂';
    if (testAge > 100) return '‚ùó –ù–µ –≤—ñ—Ä—é üòÖ)';

    return true;
  }
}
